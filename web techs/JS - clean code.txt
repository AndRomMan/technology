1 Naming
 Работа над неймингом — это часть архитектурной работы.
  Размышляя над терминами и их значением, мы прикидываем архитектуру нашей системы.
  
Проблемы с неймингом → проблемы с пониманием предметной области
Плохой нейминг — это работа, оставленная на потом. В моменте мы не уделили ему достаточно внимания, значит, будем уделять его потом — каждый раз, когда придётся работать с кодом или другими артефактами. Это похоже на захламлённую комнату. Подходя к неймингу несистемно, мы увеличиваем беспорядок. И нам становится всё сложнее ориентироваться, придётся держать много особенностей в голове.

Выведем остальные следствия плохого нейминга: 

    требуется больше усилий → больше вероятность ошибки;

    увеличивается энтропия → код сложнее поддерживать;

    разработка идёт медленнее и труднее с нарастающим итогом.
    
    
1.1 Как выстроить работу с неймингом в команде
1) Погрузиться в предметную область.
 Для этого есть разные инструменты: от простого интро или экскурсии на производство до Event Storming или совместного составления User Story Map
 И каждый новый участник команды должен проходить погружение.
 
2) Составить словарик. В парадигме DDD это будет Ubiquitous Language. 
Для составления словарика собирается встреча — максимально все, кто будет участвовать в работе над проектом. Важнейшим критерием должно быть то, что в группе есть и бизнес, и технические эксперты. Драйвит составление словарика и его владение технический эксперт. Примерный состав группы:

    менеджер продукта,

    разработчик,

    инженер по качеству,

    дизайнер,

    аналитик,

    стейкхолдер,

    эксперт со стороны бизнеса.
    
Словарик состоит из сущностей, акторов, процессов из предметной области.

 Иначе говоря, нам нужно «нарезать» домен на сущности. 
 Выдвигая каждый термин, мы расписываем его определение, что мы понимаем под этим.
 В процессе формулирования терминов и их определений происходит обмен контекстами между техническими и бизнес-экспертами. 
 
 Во время встречи происходит выравнивание картины у всех участников.
 
 Наше видение будущей системы уже может быть сопоставлено с ожиданиями стейкхолдеров. Для представителей бизнеса важно и интересно быть вовлечёнными в создание продукта, которым они же и будут пользоваться, который станет их активом.
 
 Вполне может случиться, что найдутся непроработанные детали, которые нужно выяснить и взять на исследование.
 
 У нас есть глоссарий бизнес-терминов на английском. Лучше, если он будет глобальным для компании. Как упоминалось выше, перевод бизнес и нишевой терминологии — задача нетривиальная. Переводчику нужно обладать экспертизой в бизнесе, чтобы правильно подбирать терминологию. Так что такому глоссарию обязательно нужен владелец, который будет аппрувить или помогать с переводами.
 
 Для перевода мы не пользуемся гугл-транслейтом. Наши инструменты:

    multitran.com для перевода,
    wooordhunt.ru для поиска английских терминов в контексте,
    context.reverso.net для поиска терминов по контексту.
        
    Если вам сложно выбрать из двух-трёх терминов, вбивайте в поиск термины как в примере: staff member vs employee и вы попадёте на форумы, где носители языка помогают разобраться с контекстом употребления.
    
3)
После того как мы составили словарик, добавляем его прямо в readme проекта. Он должен быть актуальным и лежать на виду, рядом с кодом.

4)
Следующий шаг — это контроль, за это отвечает код-ревью. 
В процессе код-ревью по неймингу учитываем следующее:

    верифицируем все новые термины;

    смотрим на нейминг так, словно вы никогда не работали с этим доменом;

    из названия должно быть сразу понятно, что это;

    у термина не должно быть нескольких трактовок.
    
5)
Как это назвать? Практические советы
- Отталкивайтесь от значения. Выпишите его. Как бы вы это назвали? Начните с русского наименования. Совместите значение и название — должно звучать складно, без лишних слов, на которых «спотыкаешься» — как человеческая речь.

- Не можете назвать лаконично — назовите предложением, потом сокращайте
Количество заказов на курьера в час 
→ ordersCountPerCourierPerHour 
→ ordersPerCourierLabourHour

- Не стремитесь называть максимально коротко. Нейминг из 3-4 слов — это нормально. 

- Одна переменная — одна цель. Например, вы хотите записать дату и время окончания смены и одновременно по этой же переменной понимать, закончилась ли смена. Никогда так не делайте! Только явное обозначение в другой булевой переменной. ShiftEndedAt, IsShiftEnded.

- Отрицание только усложняет, а также это пример неявного поведения. Используйте явные наименования. Не «недоступно», а «доступ запрещён».

- Используйте глаголы или прилагательные для уточнения контекста:
addedIngredients, removedIngredients, lateOrdersCount

- Стандартизируйте нейминг для времени. Если система фиксирует какое-то событие, то используйте глагол в прошедшем времени + суффикс At: happenedAt, startedAt.
Если по умолчанию храните время в UTC (что рекомендуется делать), а в контракте отдаёте локальное, то добавляйте ещё один суффикс Local: happenedAtLocal.

- Опирайтесь на словари синонимов и значений.


6) Легаси
Иногда не выгодно делать рефакторинг.
У БОЙСКАУТОВ ЕСТЬ ПРАВИЛО : «Всегда оставляйте палаточный лагерь чище, чем вы его нашли»
Я не думаю, что это правило требует слишком многого. Вам не нужно доводить каждый модуль до совершенства, прежде чем вы его зарегистрируете. Вы просто должны сделать его немного лучше , чем когда вы его проверили. Конечно, это означает, что любой код, который вы добавляете в модуль, должен быть чистым. 


TechnicalDebtQuadrant - Квадрант технического долга.png
g:\technology\tips & tricks\квадрант технического долга.png

7) Ещё одна рекомендация — не обсуждайте нейминг текстом (во время ревью или составляя словарик), старайтесь делать это синхронно. Иначе это вымотает всех.


=====================================================================
Главный плюс для бизнеса — это скорость. Словарик, составленный на старте, эти несколько встреч будут окупать себя многократно: в ходе начальной разработки проекта, при каждом онбординге нового человека и команды, при каждом возвращении спустя несколько месяцев, чтобы добавить новые фичи.